{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/klair/Documents/React js/demowork/src/Components/DataTable.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table, TableBody, TableCell, makeStyles, TableContainer, TableHead, TableRow, TablePagination } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst useStyles = makeStyles(theme => ({\n  fechingicon: {\n    position: 'absolute',\n    top: '40%',\n    left: '45%'\n  }\n}));\n\nconst DataTable = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    api\n  } = window['runtime-config'];\n  let [questions, setQuestions] = useState([]);\n  let [isDataFecteched, setisDataFeteched] = useState(false);\n  let [isEnglish, setIsEnglish] = useState(true);\n  useEffect(() => {\n    fetchingData();\n  }, []);\n\n  const fetchingData = async () => {\n    try {\n      setisDataFeteched(true);\n      const record = await axios.get(api + \"GetQuestions\"); // console.log(\"Status\", record.status)\n\n      setQuestions(record.data);\n      toast.success(\"Data Fetched Successfully\");\n      setisDataFeteched(false);\n    } catch (error) {\n      // toast.error(error.message)\n      toast.error(error.message);\n      console.log(\"ERROR\", error);\n    } finally {\n      setisDataFeteched(false);\n    }\n  };\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  console.log(questions);\n  const pageRecord = questions.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  return isDataFecteched ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n    className: classes.fechingicon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        style: {\n          backgroundColor: '#333'\n        },\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              color: \"white\"\n            },\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              color: \"white\",\n              cursor: 'pointer'\n            },\n            onClick: () => setIsEnglish(!isEnglish),\n            children: isEnglish ? \"English\" : \"Spanish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              color: \"white\"\n            },\n            children: \"TYPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              color: \"white\"\n            },\n            children: \"LEVEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              color: \"white\"\n            },\n            children: \"ACTION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        hover: \"true\",\n        children: pageRecord.map(q => /*#__PURE__*/_jsxDEV(TableRow, {\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: q.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: isEnglish ? q.statement_en : q.statement_es\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: q.type === 1 ? \"True/False\" : \"MCQs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: q.level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(VisibilityOutlinedIcon, {\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => console.log(q.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 22\n          }, this)]\n        }, q.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: questions.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n};\n\n_s(DataTable, \"iKkwaySlMl4teu6tvw1VPtnxwxw=\", false, function () {\n  return [useStyles];\n});\n\n_c = DataTable;\nexport default DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["/home/klair/Documents/React js/demowork/src/Components/DataTable.jsx"],"names":["Table","TableBody","TableCell","makeStyles","TableContainer","TableHead","TableRow","TablePagination","axios","React","useEffect","useState","VisibilityOutlinedIcon","CircularProgress","ToastContainer","toast","useStyles","theme","fechingicon","position","top","left","DataTable","classes","api","window","questions","setQuestions","isDataFecteched","setisDataFeteched","isEnglish","setIsEnglish","fetchingData","record","get","data","success","error","message","console","log","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","pageRecord","slice","backgroundColor","color","cursor","map","q","id","statement_en","statement_es","type","level","length"],"mappings":"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","sourcesContent":["import { Table, TableBody, TableCell, makeStyles,TableContainer, TableHead, TableRow, TablePagination } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\nconst useStyles = makeStyles((theme) => ({\n    fechingicon:{\n       position:'absolute',\n       top:'40%',\n       left:'45%'\n    }\n  }));\nconst DataTable = () => { \n    const classes=useStyles()\n    const {api} =window['runtime-config']\n    let [questions,setQuestions]=useState([]);\n    let [isDataFecteched , setisDataFeteched]=useState(false)\n    let [isEnglish,setIsEnglish]=useState(true)\n    \n   \n useEffect(()=>{\n   \n    fetchingData()\n    \n },[])\n  const fetchingData = async()=>{\n    \n    try {\n      \n        setisDataFeteched(true) \n        const record=await axios.get(api+\"GetQuestions\");\n        // console.log(\"Status\", record.status)\n        setQuestions(record.data)\n        toast.success(\"Data Fetched Successfully\")\n        setisDataFeteched(false)\n        \n    }\n    catch(error)\n    {\n      // toast.error(error.message)\n      toast.error(error.message)\n         console.log(\"ERROR\",error);\n    }\n    finally{\n   \n      setisDataFeteched(false)\n    }\n  }\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  console.log(questions)\n\n    const pageRecord=questions.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n    return isDataFecteched?<CircularProgress className={classes.fechingicon}/> :  ( \n      <TableContainer>\n          <ToastContainer/>\n          <Table >\n              <TableHead style={{backgroundColor:'#333' , }}>\n                  <TableRow >\n                      <TableCell align=\"center\" style={{color:\"white\"}}>ID</TableCell>\n                      <TableCell align=\"center\" style={{color:\"white\" , cursor:'pointer'}} onClick={()=>setIsEnglish(!isEnglish)}>{isEnglish?\"English\":\"Spanish\"}</TableCell>\n                      <TableCell align=\"center\" style={{color:\"white\"}}>TYPE</TableCell>\n                      <TableCell align=\"center\" style={{color:\"white\"}}>LEVEL</TableCell>\n                      <TableCell align=\"center\" style={{color:\"white\"}}>ACTION</TableCell>\n                  </TableRow>\n              </TableHead>\n              <TableBody hover=\"true\">\n                  \n                   {pageRecord.map(q=>\n                   <TableRow hover={true} key={q.id}>\n                     <TableCell align=\"center\">{q.id}</TableCell>\n                     <TableCell align=\"center\">{isEnglish?q.statement_en:q.statement_es}</TableCell>\n                     <TableCell align=\"center\">{q.type===1?\"True/False\":\"MCQs\"}</TableCell>\n                     <TableCell align=\"center\">{q.level}</TableCell>\n                     <TableCell align=\"center\" ><VisibilityOutlinedIcon style={{cursor:'pointer'}}\n                     onClick={()=>console.log(q.id)}\n                     /></TableCell>\n                     \n                     </TableRow>\n                    )}\n                     \n                 \n              </TableBody>\n         \n          </Table>\n          <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={questions.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      \n      </TableContainer>\n     );\n}\n \nexport default DataTable;"]},"metadata":{},"sourceType":"module"}