{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/klair/Documents/React js/demowork/src/Components/DataTable.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst DataTable = () => {\n  _s();\n\n  const {\n    api\n  } = window['runtime-config'];\n  let [questions, setQuestions] = useState();\n  useEffect(() => {\n    fetchingData();\n  }, []);\n\n  const fetchingData = async () => {\n    try {\n      const record = await axios.get(api);\n      setQuestions(record.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ENGLISH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"TYPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"LEVEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ACTION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: questions.map(q => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: q.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: q.statement_en\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: q.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: q.level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_s(DataTable, \"9cJl38H2DFHQWOIfFoMy6ezp2B0=\");\n\n_c = DataTable;\nexport default DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["/home/klair/Documents/React js/demowork/src/Components/DataTable.jsx"],"names":["Table","TableCell","TableContainer","TableHead","TableRow","axios","React","useEffect","useState","DataTable","api","window","questions","setQuestions","fetchingData","record","get","data","error","console","log","map","q","id","statement_en","type","level"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,cAA3B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,mBAAtE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA;AAAD,MAAOC,MAAM,CAAC,gBAAD,CAAnB;AACA,MAAI,CAACC,SAAD,EAAWC,YAAX,IAAyBL,QAAQ,EAArC;AAEHD,EAAAA,SAAS,CAAC,MAAI;AACXO,IAAAA,YAAY;AACd,GAFQ,EAEP,EAFO,CAAT;;AAGC,QAAMA,YAAY,GAAG,YAAS;AAC5B,QAAI;AACA,YAAMC,MAAM,GAAC,MAAMV,KAAK,CAACW,GAAN,CAAUN,GAAV,CAAnB;AACAG,MAAAA,YAAY,CAACE,MAAM,CAACE,IAAR,CAAZ;AACH,KAHD,CAIA,OAAMC,KAAN,EACA;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACF,GATD;;AAWE,sBACE,QAAC,cAAD;AAAA,2BACI,QAAC,KAAD;AAAA,8BACI,QAAC,SAAD;AAAA,+BACI,QAAC,QAAD;AAAA,kCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,SAAD;AAAA,kBAEMN,SAAS,CAACS,GAAV,CAAcC,CAAC,iBAChB,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA,sBAAYA,CAAC,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAA,sBAAYD,CAAC,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAA,sBAAYF,CAAC,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD;AAAA,sBAAYH,CAAC,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC;AAFN;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AA4BH,CA9CD;;GAAMjB,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import { Table, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst DataTable = () => {\n    const {api} =window['runtime-config']\n    let [questions,setQuestions]=useState();\n\n useEffect(()=>{\n    fetchingData()\n },[])\n  const fetchingData = async()=>{\n    try {\n        const record=await axios.get(api);\n        setQuestions(record.data)\n    }\n    catch(error)\n    {\n        console.log(error);\n    }\n  }\n   \n    return ( \n      <TableContainer>\n          <Table>\n              <TableHead>\n                  <TableRow>\n                      <TableCell>ID</TableCell>\n                      <TableCell>ENGLISH</TableCell>\n                      <TableCell>TYPE</TableCell>\n                      <TableCell>LEVEL</TableCell>\n                      <TableCell>ACTION</TableCell>\n                  </TableRow>\n              </TableHead>\n              <TableBody>\n                  \n                   {questions.map(q=>\n                   <TableRow>\n                     <TableCell>{q.id}</TableCell>\n                     <TableCell>{q.statement_en}</TableCell>\n                     <TableCell>{q.type}</TableCell>\n                     <TableCell>{q.level}</TableCell>\n                     </TableRow>\n                    )}\n                     \n                 \n              </TableBody>\n          </Table>\n      </TableContainer>\n     );\n}\n \nexport default DataTable;"]},"metadata":{},"sourceType":"module"}