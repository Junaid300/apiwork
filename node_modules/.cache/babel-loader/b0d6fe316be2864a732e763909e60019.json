{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/klair/Documents/React js/demowork/src/Components/DataTable.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst DataTable = () => {\n  _s();\n\n  const {\n    api\n  } = window['runtime-config'];\n  let [questions, setQuestions] = useState([]);\n  let [isDataFecteched, setisDataFeteched] = useState(false);\n  useEffect(() => {\n    fetchingData();\n  }, []);\n\n  const fetchingData = async () => {\n    try {\n      setisDataFeteched(true);\n      const record = await axios.get(api);\n      setQuestions(record.data);\n      setisDataFeteched(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return isDataFecteched ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ENGLISH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"TYPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"LEVEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ACTION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: questions.map(q => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: q.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: q.statement_en\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: q.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: q.level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(VisibilityOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n\n_s(DataTable, \"UVucwjgDt4IRLQNq9zYZMaGNVj4=\");\n\n_c = DataTable;\nexport default DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["/home/klair/Documents/React js/demowork/src/Components/DataTable.jsx"],"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","axios","React","useEffect","useState","VisibilityOutlinedIcon","CircularProgress","DataTable","api","window","questions","setQuestions","isDataFecteched","setisDataFeteched","fetchingData","record","get","data","error","console","log","map","q","id","statement_en","type","level"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,cAAtC,EAAsDC,SAAtD,EAAiEC,QAAjE,QAAiF,mBAAjF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA;AAAD,MAAOC,MAAM,CAAC,gBAAD,CAAnB;AACA,MAAI,CAACC,SAAD,EAAWC,YAAX,IAAyBP,QAAQ,CAAC,EAAD,CAArC;AACA,MAAI,CAACQ,eAAD,EAAmBC,iBAAnB,IAAsCT,QAAQ,CAAC,KAAD,CAAlD;AACHD,EAAAA,SAAS,CAAC,MAAI;AAEXW,IAAAA,YAAY;AAEd,GAJQ,EAIP,EAJO,CAAT;;AAKC,QAAMA,YAAY,GAAG,YAAS;AAC5B,QAAI;AACAD,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,YAAME,MAAM,GAAC,MAAMd,KAAK,CAACe,GAAN,CAAUR,GAAV,CAAnB;AACAG,MAAAA,YAAY,CAACI,MAAM,CAACE,IAAR,CAAZ;AACAJ,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KALD,CAMA,OAAMK,KAAN,EACA;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACF,GAXD;;AAaE,SAAON,eAAe,gBAAC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,UAAD,gBACpB,QAAC,cAAD;AAAA,2BACI,QAAC,KAAD;AAAA,8BACI,QAAC,SAAD;AAAA,+BACI,QAAC,QAAD;AAAA,kCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,SAAD;AAAA,kBAEMF,SAAS,CAACW,GAAV,CAAcC,CAAC,iBAChB,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA,sBAAYA,CAAC,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAA,sBAAYD,CAAC,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAA,sBAAYF,CAAC,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD;AAAA,sBAAYH,CAAC,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,SAAD;AAAA,mCAAW,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC;AAFN;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AA6BH,CAnDD;;GAAMnB,S;;KAAAA,S;AAqDN,eAAeA,SAAf","sourcesContent":["import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst DataTable = () => {\n    const {api} =window['runtime-config']\n    let [questions,setQuestions]=useState([]);\n    let [isDataFecteched , setisDataFeteched]=useState(false)\n useEffect(()=>{\n   \n    fetchingData()\n    \n },[])\n  const fetchingData = async()=>{\n    try {\n        setisDataFeteched(true)\n        const record=await axios.get(api);\n        setQuestions(record.data)\n        setisDataFeteched(false)\n    }\n    catch(error)\n    {\n        console.log(error);\n    }\n  }\n   \n    return isDataFecteched?<CircularProgress /> :  ( \n      <TableContainer>\n          <Table>\n              <TableHead>\n                  <TableRow>\n                      <TableCell>ID</TableCell>\n                      <TableCell>ENGLISH</TableCell>\n                      <TableCell>TYPE</TableCell>\n                      <TableCell>LEVEL</TableCell>\n                      <TableCell>ACTION</TableCell>\n                  </TableRow>\n              </TableHead>\n              <TableBody>\n                  \n                   {questions.map(q=>\n                   <TableRow>\n                     <TableCell>{q.id}</TableCell>\n                     <TableCell>{q.statement_en}</TableCell>\n                     <TableCell>{q.type}</TableCell>\n                     <TableCell>{q.level}</TableCell>\n                     <TableCell><VisibilityOutlinedIcon/></TableCell>\n                     </TableRow>\n                    )}\n                     \n                 \n              </TableBody>\n          </Table>\n      </TableContainer>\n     );\n}\n \nexport default DataTable;"]},"metadata":{},"sourceType":"module"}