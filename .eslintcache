[{"/home/klair/Documents/React js/demowork/src/index.js":"1","/home/klair/Documents/React js/demowork/src/App.js":"2","/home/klair/Documents/React js/demowork/src/reportWebVitals.js":"3","/home/klair/Documents/React js/demowork/src/Components/DataTable.jsx":"4","/home/klair/Documents/React js/demowork/src/Components/DisplayContent.jsx":"5","/home/klair/Documents/React js/demowork/src/Components/Navbar.jsx":"6","/home/klair/Documents/React js/demowork/src/Components/Popup.jsx":"7","/home/klair/Documents/React js/demowork/src/Components/InputForm.jsx":"8","/home/klair/Documents/React js/demowork/src/Components/Inputs/Radio.jsx":"9","/home/klair/Documents/React js/demowork/src/Components/Inputs/InputField.jsx":"10"},{"size":461,"mtime":1611860400422,"results":"11","hashOfConfig":"12"},{"size":507,"mtime":1611924814798,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611824358850,"results":"14","hashOfConfig":"12"},{"size":3946,"mtime":1611925143692,"results":"15","hashOfConfig":"12"},{"size":956,"mtime":1611861888569,"results":"16","hashOfConfig":"12"},{"size":382,"mtime":1611856222750,"results":"17","hashOfConfig":"12"},{"size":761,"mtime":1612004817327,"results":"18","hashOfConfig":"12"},{"size":5621,"mtime":1612005549558,"results":"19","hashOfConfig":"12"},{"size":668,"mtime":1611864822033,"results":"20","hashOfConfig":"12"},{"size":421,"mtime":1611865070427,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"q3tcho",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/home/klair/Documents/React js/demowork/src/index.js",[],["48","49"],"/home/klair/Documents/React js/demowork/src/App.js",[],"/home/klair/Documents/React js/demowork/src/reportWebVitals.js",[],"/home/klair/Documents/React js/demowork/src/Components/DataTable.jsx",["50","51","52"],"import { Table, TableBody, TableCell, makeStyles,TableContainer, TableHead, TableRow, TablePagination } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\nimport { Link , useParams} from 'react-router-dom';\nconst useStyles = makeStyles((theme) => ({\n    fechingicon:{\n       position:'absolute',\n       top:'40%',\n       left:'45%'\n    }\n  }));\nconst DataTable = () => { \n    const classes=useStyles()\n    const {api} =window['runtime-config']\n    let [questions,setQuestions]=useState([]);\n    let [isDataFecteched , setisDataFeteched]=useState(false)\n    let [isEnglish,setIsEnglish]=useState(true)\n    \n   \n useEffect(()=>{\n   \n    fetchingData()\n    \n },[])\n  const fetchingData = async()=>{\n    \n    try {\n      \n        setisDataFeteched(true) \n        const record=await axios.get(api+\"GetQuestions\");\n        // console.log(\"Status\", record.status)\n        setQuestions(record.data)\n        toast.success(\"Data Fetched Successfully\")\n        setisDataFeteched(false)\n        \n    }\n    catch(error)\n    {\n      // toast.error(error.message)\n      toast.error(error.message)\n         console.log(\"ERROR\",error);\n    }\n    finally{\n   \n      setisDataFeteched(false)\n    }\n  }\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  console.log(questions)\n\n    const pageRecord=questions.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n    return isDataFecteched?<CircularProgress className={classes.fechingicon}/> :  ( \n      <TableContainer>\n          <ToastContainer/>\n          <Table >\n              <TableHead style={{backgroundColor:'#333' , }}>\n                  <TableRow >\n                      <TableCell align=\"center\" style={{color:\"white\"}}>ID</TableCell>\n                      <TableCell align=\"center\" style={{color:\"white\" , cursor:'pointer'}} onClick={()=>setIsEnglish(!isEnglish)}>{isEnglish?\"English\":\"Spanish\"}</TableCell>\n                      <TableCell align=\"center\" style={{color:\"white\"}}>TYPE</TableCell>\n                      <TableCell align=\"center\" style={{color:\"white\"}}>LEVEL</TableCell>\n                      <TableCell align=\"center\" style={{color:\"white\"}}>ACTION</TableCell>\n                  </TableRow>\n              </TableHead>\n              <TableBody hover=\"true\">\n                  \n                   {pageRecord.map(q=>\n                   <TableRow hover={true} key={q.id}>\n                     <TableCell align=\"center\">{q.id}</TableCell>\n                     <TableCell align=\"center\">{isEnglish?q.statement_en:q.statement_es}</TableCell>\n                     <TableCell align=\"center\">{q.type===1?\"True/False\":\"MCQs\"}</TableCell>\n                     <TableCell align=\"center\">{q.level}</TableCell>\n                     <TableCell align=\"center\" >\n                   \n                       <VisibilityOutlinedIcon style={{cursor:'pointer'}} />\n                      \n                 </TableCell>\n                     \n                     </TableRow>\n                    )}\n                     \n                 \n              </TableBody>\n         \n          </Table>\n          <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={questions.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      \n      </TableContainer>\n     );\n}\n \nexport default DataTable;","/home/klair/Documents/React js/demowork/src/Components/DisplayContent.jsx",["53"],"import { Button, Grid,makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport DataTable from './DataTable';\nimport PopUp from './Popup';\n\n\n\nconst DisplayContent = () => {\n   let [openPopuUp,setOpenPopUp]=useState(false);\n   const handlePopUp = () =>{\n    setOpenPopUp(true)\n   }\n    return ( \n      <Grid container direction=\"column\">\n      <Grid item xs={12} style={{margin:'20px auto'}}>\n       <Button style={{backgroundColor:'#333' , color:'white',padding:'10px'}}\n       \n       onClick={handlePopUp}\n       \n       >ADD Question</Button>\n      </Grid>\n      <Grid item container style={{marginTop:'20px'}}>\n        <Grid item xs={false} sm={1} md={2} />\n        <Grid item xs={12} sm={10} md={8} >\n          <DataTable />\n\n        </Grid>\n        <Grid item xs={false} sm={1} md={2}/>\n      </Grid>\n      <PopUp openPopUp={openPopuUp} setOpenPopUp={setOpenPopUp}/>\n    </Grid>\n     );\n}\n \nexport default DisplayContent;","/home/klair/Documents/React js/demowork/src/Components/Navbar.jsx",[],"/home/klair/Documents/React js/demowork/src/Components/Popup.jsx",["54"],"import { Dialog, DialogActions, DialogTitle,Button, DialogContent, Typography } from '@material-ui/core';\nimport React from 'react';\nimport InputForm from './InputForm';\n\nconst PopUp = ({openPopUp,setOpenPopUp}) => {\n    console.log(\"POP\");\n  \n    return (  \n        <Dialog open={openPopUp} maxWidth=\"md\" fullWidth>\n            <DialogTitle>\n               \n                    Add Question\n           \n            </DialogTitle>\n            <DialogContent>\n            <InputForm/>\n            </DialogContent>\n           <DialogActions>\n               <Button onClick={()=>setOpenPopUp(false)}>Close</Button>\n               <Button onClick={()=>setOpenPopUp(false)}>Save</Button>\n           </DialogActions>\n        </Dialog>\n    );\n}\n \nexport default PopUp;","/home/klair/Documents/React js/demowork/src/Components/InputForm.jsx",["55","56","57","58"],"import { Button, Grid, Radio, TextField } from '@material-ui/core';\nimport React from 'react';\nimport InputField from './Inputs/InputField';\nimport RadioButton from './Inputs/Radio';\nimport formik, { useFormik } from 'formik';\nimport axios from 'axios';\n\nconst initialValues ={\n    statement_en:\"\",\n    statement_es:\"\",\n    level: 1,\n    type:2,\n    isTrue:false,\n    explanation:[],\n    Answers: [\n\t\t{\n\t\t\tstatement_en : \"my options 1\",\n\t\t\tstatement_es : \"mis opciones 1\",\n\t\t\tisCorrect : false\n\t\t},\n\t\t{\n\t\t\tstatement_en : \"my options 2\",\n\t\t\tstatement_es : \"mis opciones 2\",\n\t\t\tisCorrect : true\n\t\t},\n\t\t{\n\t\t\tstatement_en : \"my options 3\",\n\t\t\tstatement_es : \"mis opciones 3\",\n\t\t\tisCorrect : false\n\t\t},\n\t\t{\n\t\t\tstatement_en : \"my options 4\",\n\t\t\tstatement_es : \"mis opciones 4\",\n\t\t\tisCorrect : false\n\t\t}\n\t]\n    \n    \n   \n\n}\n\n   \n    \n    \n    \nconst InputForm = () => {\n  \n    const {api}=window['runtime-config']\n    const formik=useFormik({\n        initialValues,\n        \n    })\n    const [selectedValue, setSelectedValue] = React.useState('a');\n   \n        console.log(formik.values)\n    const handleSubmit =async() =>{\n        let submitData={\n            statement_en: formik.values.statement_en,\n            statement_es: formik.values.statement_en,\n            \n            isTrue: formik.values.isTrue===\"True\"?true:false,\n            level: parseInt(formik.values.level),\n            type: formik.values.level==1?2:1,\n            Answers:[],\n            explanation: [formik.values.explanation]\n        }\n        console.log(\"submit\",submitData)\n        try {\n             const postRequest=await axios.post(api+\"PostQuestion\" , submitData)\n            console.log(\"postRequest.data\")\n        }\n        catch(error)\n        {\n            console.log(error)\n        }\n    }\n    const handleChange = (event) => {\n        setSelectedValue(event.target.value);\n      };\n    \n    return ( \n        <form onSubmit={handleSubmit} >\n            <Grid container direction=\"column\"  >\n                <Grid item xs={12}>\n              <RadioButton radioValue={[\"1\",\"2\",\"3\"]} onChange={formik.handleChange} value={formik.values.level} name=\"level\"/>\n              \n              </Grid>\n\n\n              <Grid item xs={12} style={{marginTop:'10px'}}>\n              <InputField label=\"English\" type=\"text\" onChange={formik.handleChange} value={formik.values.statement_en} name=\"statement_en\"/>\n              \n              </Grid>\n              <Grid item xs={12} style={{marginTop:'10px'}}>\n              <InputField label=\"Spanish\" type=\"text\" onChange={formik.handleChange} value={formik.values.statement_es} name=\"statement_es\"/>\n              \n              </Grid>\n       \n              { formik.values.level===\"1\"  ?\n              \n            <div>\n              <Grid item xs={12} style={{marginTop:'10px'}}>\n              <RadioButton radioValue={[\"true\",\"false\"]} onChange={formik.handleChange} value={formik.values.isTrue} name=\"isTrue\"/>\n            \n              \n              </Grid>\n              <Grid item xs={12} style={{marginTop:'10px'}}>\n              <InputField label=\"Explaination\" type=\"text\" onChange={formik.handleChange} value={formik.values.explaination} name=\"explaination\"/>\n              \n              </Grid>\n              <Button onClick={handleSubmit}>Save</Button>\n              </div>:\n              <div>\n                  <Grid item xs={12} style={{marginTop:'10px' , display:'flex' }}>\n              <InputField style={{marginTop:'10px'}} label=\"English Option A\" type=\"text\"   name=\"Answers\"/>\n              <InputField style={{marginTop:'10px'}} label=\"Spanish Option A\" type=\"text\"   name=\"Answers\"/>\n              <Radio\n       \n       onClick={handleChange}\n        name=\"radio-button-demo\"\n        checked={selectedValue === 'a'}\n        value=\"a\"\n      />\n              </Grid>\n              <Grid item xs={12} style={{marginTop:'10px', display:'flex'}}>\n              <InputField style={{marginTop:'10px'}} label=\"English Option B\" type=\"text\"   name=\"Answers\"/>\n              <InputField style={{marginTop:'10px'}} label=\"Spanish Option B\" type=\"text\"   name=\"Answers\"/>\n              <Radio\n       checked={selectedValue === 'b'}\n       value=\"b\"\n       onClick={handleChange}\n       name=\"radio-button-demo\"\n       \n     />\n              </Grid>\n              <Grid item xs={12} style={{marginTop:'10px', display:'flex'}}>\n              <InputField style={{marginTop:'10px'}} label=\"English Option C\" type=\"text\"   name=\"Answers\"/>\n              <InputField style={{marginTop:'10px'}} label=\"Spanish Option C\" type=\"text\"   name=\"Answers\"/>\n              <Radio\n       checked={selectedValue === 'c'}\n       value=\"c\"\n       onClick={handleChange}\n       name=\"radio-button-demo\"\n       \n     />\n              </Grid>\n              <Grid item xs={12} style={{marginTop:'10px', display:'flex'}}>\n              <InputField style={{marginTop:'10px'}} label=\"English Option D\" type=\"text\"   name=\"Answers\"/>\n              <InputField style={{marginTop:'10px'}} label=\"Spanish Option D\" type=\"text\"   name=\"Answers\"/>\n              <Radio\n       checked={selectedValue === 'd'}\n       value=\"d\"\n       onClick={handleChange}\n       name=\"radio-button-demo\"\n       \n     />\n              </Grid>\n                <Grid item xs={12} style={{marginTop:'10px'}}>\n              <InputField label=\"Explaination\" type=\"text\" onChange={formik.handleChange} value={formik.values.explaination} name=\"explaination\"/>\n              \n              </Grid> \n              </div>\n              }\n              \n             \n           </Grid>\n        </form>\n     );\n}\n \nexport default InputForm;","/home/klair/Documents/React js/demowork/src/Components/Inputs/Radio.jsx",[],"/home/klair/Documents/React js/demowork/src/Components/Inputs/InputField.jsx",["59"],"import { FormControl, FormLabel, TextField } from '@material-ui/core';\nimport React from 'react';\n\nconst InputField = ({name,value,label,onChange,type}) => {\n    return ( \n        <FormControl>\n            \n            <TextField label={label} type={type} variant=\"outlined\" size=\"small\" style={{width:'400px'}} value={value} onChange={onChange} name={name}/>\n        </FormControl>\n     );\n}\n \nexport default InputField;",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":8,"column":10,"nodeType":"66","messageId":"67","endLine":8,"endColumn":14},{"ruleId":"64","severity":1,"message":"68","line":8,"column":17,"nodeType":"66","messageId":"67","endLine":8,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":28,"column":4,"nodeType":"71","endLine":28,"endColumn":6,"suggestions":"72"},{"ruleId":"64","severity":1,"message":"73","line":1,"column":23,"nodeType":"66","messageId":"67","endLine":1,"endColumn":33},{"ruleId":"64","severity":1,"message":"74","line":1,"column":68,"nodeType":"66","messageId":"67","endLine":1,"endColumn":78},{"ruleId":"64","severity":1,"message":"75","line":1,"column":31,"nodeType":"66","messageId":"67","endLine":1,"endColumn":40},{"ruleId":"64","severity":1,"message":"76","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":64,"column":38,"nodeType":"79","messageId":"80","endLine":64,"endColumn":40},{"ruleId":"64","severity":1,"message":"81","line":70,"column":20,"nodeType":"66","messageId":"67","endLine":70,"endColumn":31},{"ruleId":"64","severity":1,"message":"82","line":1,"column":23,"nodeType":"66","messageId":"67","endLine":1,"endColumn":32},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchingData'. Either include it or remove the dependency array.","ArrayExpression",["85"],"'makeStyles' is defined but never used.","'Typography' is defined but never used.","'TextField' is defined but never used.","'formik' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'postRequest' is assigned a value but never used.","'FormLabel' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [fetchingData]",{"range":"88","text":"89"},[961,963],"[fetchingData]"]